(function () {
	String.prototype.ucfirst = function() {return this.charAt(0).toUpperCase() + this.substr(1);}
	var extender = {};
	var propertyextender = {};
	propertyextender.checkprop = function ( obj , prop ) {
		if ( typeof obj == 'object' ) {
			if ( obj.hasOwnProperty(prop) ) {
				return true;
			}
		}
		return false;
	}

	/**
	 * [observe description]
	 * @param  {[type]}   eventName [description]
	 * @param  {Function} callback  [description]
	 * @return {[type]}             [description]
	 */
	extender.observe = function(eventName, callback) {
	    return this.each(function(){
	        var el = this;
	        $(document).on(eventName, function(){
	            callback.apply(el, arguments);
	        })
	    });
	}

	/**
	 * [grid description]
	 * @param  {[type]} url    [url ajax to get data]
	 * @param  {[type]} config [configuration]
	 * @return {[type]}        [description]
	 */
	extender.grid = function ( url , config ) {
		config = Object.assign( {} , config );
		var columns = {};
		var checkbox , index;
		var parselabel  = new String();
		var parsecolumn = new String();
		var classname   = this.attr('class');
		var theselement = this;
		var labelid     = ""+classname+"_tablelabel";
		if ( $.checkprop( config , "checkbox") ) { checkbox = config.checkbox; }
		if ( $.checkprop( config , "index") ) { index = config.index; }
		if ( $.checkprop( config , "columns") ) {
			var conf_extend = { "No" : 'increment' };
			if ( checkbox == true ) {
				conf_extend = Object.assign( { 'checkbox' : true } , conf_extend );
			}
			columns = Object.assign( conf_extend , config.columns);
		}
		var table = {open   : "<table class='table'>",theado:"<thead>",theadc:"</thead>",tbodyo:"<tbody>",
			tbodyc : "</tbody>",tro:"<tr>",trc: "</tr>",tho:"<th>",thc:"</th>",tdo:"<td>",tdc:"</td>",closed:"</table>"};
		$.each( columns , function (kcol , vcol) {
			if ( kcol == 'checkbox'&& $.checkprop( config , "checkall" ) ) { 
				if ( config.checkall ) {
					parsecolumn += table.tho + '<input type="checkbox" id="'+classname+'_selectall">' + table.thc; 
				} else {
					parsecolumn += table.tho + '<i class="fa fa-list"></i>' + table.thc; 
				}
			} else {
				parsecolumn += table.tho + kcol + table.thc; }
		});
		var thead = table.theado+table.tro+parsecolumn+table.trc+table.theadc;
		$.postjson("/settings/users" , {} , function (data) {}).then(function (data) {
			var result = data.result;
			var lendata = Object.keys(result).length;
			var parsebody = new String();
			var inc = 1;
			for ( i = 0 ; i < lendata ; i++ ) {
				parsebody += '<tr>';
				var row = result[i];
				$.each( columns , function (kcol , vcol) {
					if (kcol=='checkbox' ) {
						if ( vcol == true  ) {
							parsebody += table.tdo + "<input id='"+classname+"_checkbox_"+row[index]+"' type='checkbox' class='"+classname+"_checkbox' value='"+row[index]+"'>" + table.tdc;
						}
					} else {
						if (vcol=='increment')parsebody+=table.tdo+inc+++table.tdc;
						else parsebody+=table.tdo+row[vcol]+table.tdc;
					}
				});
				parsebody += "</tr>";
			}
			var tbody = table.tbodyo + parsebody + table.tbodyc;
			var actionallow = [ 'add' , 'edit' , 'delete' , 'view' ];
			if ( $.checkprop( config , "action") && $.checkprop( config , "label") ) {
				var action = config.action;
				parselabel += "<div id='"+labelid+"' class='tablelabel'>&nbsp;&nbsp;&nbsp;"+config.label;
				$.each( actionallow , function ( kallowel , vallowel ) {
					if ( action.hasOwnProperty(vallowel) ) {
						var actionelm = classname+"_"+vallowel;
						var iconfa = '';
						if ( vallowel == "add" ) iconfa = "<i class='fa fa-plus'></i> &nbsp;";
						if ( vallowel == "edit" ) iconfa = "<i class='fa fa-check'></i> &nbsp;";
						if ( vallowel == "delete" ) iconfa = "<i class='fa fa-times'></i> &nbsp;";
						if ( vallowel == "view" )   iconfa = "<i class='fa fa-eye'></i> &nbsp;";
						parselabel += "<button id='"+actionelm+"' class='tablebuttonaction'>"+iconfa+vallowel.ucfirst()+"</button>";
					}
				});
				parselabel += "</div>";
			} else { if ( $.checkprop( config , "label") ) { parselabel += "<div id='"+labelid+"' class='tablelabel'>&nbsp;&nbsp;&nbsp;"+config.label+"</div>"; }}
			$(theselement).append( parselabel + table.open + thead + tbody + table.closed );
			if ( $.checkprop( config , "action") && $.checkprop( config , "label") ) {
				var action = config.action;
				$.each( actionallow , function ( kallow , vallow ) {
					if ( action.hasOwnProperty(vallow) ) {
						var actionbut = classname+"_"+vallow;
						$("#"+actionbut).click(function () { 
							var valueofchecked = new Array();
							if ( $.checkprop( config , "checkbox" )) {
								$("."+classname+"_checkbox").each(function () {
									if ( $(this).prop("checked") == true ) {
										valueofchecked.push($(this).val());
									}
								});
							}				
							action[vallow](valueofchecked);
						});
					}
				});
			}
			if ( $.checkprop( config , "checkbox") ) { 

				if ( $.checkprop( config , "checkall") ) { 
					if ( !config.checkall ) {
						$("."+classname+"_checkbox").click(function () {
							var checkboxid = $(this).attr("id");
							$("."+classname+"_checkbox").each(function () {
								$(this).prop('checked' , false);
							});
							$("#"+checkboxid).prop('checked' , true);
						});
					} else {
						$("#"+classname+"_selectall").click(function () {
							$("."+classname+"_checkbox").each(function () {
								if ( $(this).prop('checked') == false ) {
									$(this).prop('checked' , true);
								} else {
									$(this).prop('checked' , false);
								}
							});
						});
					}
				}
			}

		});
	}




	$(document).ready(function () {
		$.extend(propertyextender);
		$.fn.extend(extender);
	});

})();


